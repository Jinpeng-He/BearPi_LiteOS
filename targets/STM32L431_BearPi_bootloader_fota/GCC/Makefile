##########################################################################################################################
# File automatically-generated by tool: [projectgenerator] version: [2.30.0] date: [Sat Mar 23 14:46:28 CST 2019]
##########################################################################################################################

# ------------------------------------------------
# Generic Makefile (based on gcc)
#
# ChangeLog :
#	2017-02-10 - Several enhancements + project update mode
#   2015-07-22 - first version
# ------------------------------------------------
######################################
# target
######################################
TARGET = Huawei_LiteOS


######################################
# building variables
######################################
# debug build?
DEBUG = 1
# optimization
OPT = -Og

USE_OTA := yes
#######################################
# binaries
#######################################
PREFIX    = arm-none-eabi-
CC        = $(PREFIX)gcc
AS        = $(PREFIX)gcc -x assembler-with-cpp
OBJCOPY   = $(PREFIX)objcopy
OBJDUMP   = $(PREFIX)objdump
AR        = $(PREFIX)ar
SZ        = $(PREFIX)size
LD        = $(PREFIX)ld
HEX       = $(OBJCOPY) -O ihex
BIN       = $(OBJCOPY) -O binary -S


PROJECTBASE = $(abspath $(CURDIR))
TOP_DIR     = $(abspath $(PROJECTBASE)/../../..)

#######################################
# paths
#######################################
# firmware library path
PERIFLIB_PATH =

# Build path
BUILD_DIR = build

######################################
# source
######################################
# ASM
ASM_SOURCES_s =  \
       ${wildcard $(PROJECTBASE)/startup_stm32l431xx.s}


# C sources

USER_SRC =  \
        $(TOP_DIR)/targets/STM32L431_BearPi_bootloader_fota/Src/main.c \
        $(TOP_DIR)/targets/STM32L431_BearPi_bootloader_fota/Src/board.c \
        $(TOP_DIR)/targets/STM32L431_BearPi_bootloader_fota/Src/gpio.c \
        $(TOP_DIR)/targets/STM32L431_BearPi_bootloader_fota/Src/usart.c \
        $(TOP_DIR)/targets/STM32L431_BearPi_bootloader_fota/Src/stm32l4xx_it.c \
        $(TOP_DIR)/targets/STM32L431_BearPi_bootloader_fota/Src/stm32l4xx_hal_msp.c \
        $(TOP_DIR)/targets/STM32L431_BearPi_bootloader_fota/Src/system_stm32l4xx.c
        C_SOURCES += $(USER_SRC)

HAL_DRIVER_SRC =  \
        $(TOP_DIR)/targets/STM32L431_BearPi_bootloader_fota/Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c \
        $(TOP_DIR)/targets/STM32L431_BearPi_bootloader_fota/Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_tim_ex.c \
        $(TOP_DIR)/targets/STM32L431_BearPi_bootloader_fota/Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c \
        $(TOP_DIR)/targets/STM32L431_BearPi_bootloader_fota/Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c \
        $(TOP_DIR)/targets/STM32L431_BearPi_bootloader_fota/Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c \
        $(TOP_DIR)/targets/STM32L431_BearPi_bootloader_fota/Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_gpio.c \
        $(TOP_DIR)/targets/STM32L431_BearPi_bootloader_fota/Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc_ex.c \
        $(TOP_DIR)/targets/STM32L431_BearPi_bootloader_fota/Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c \
        $(TOP_DIR)/targets/STM32L431_BearPi_bootloader_fota/Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ramfunc.c \
        $(TOP_DIR)/targets/STM32L431_BearPi_bootloader_fota/Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c \
        $(TOP_DIR)/targets/STM32L431_BearPi_bootloader_fota/Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c \
        $(TOP_DIR)/targets/STM32L431_BearPi_bootloader_fota/Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal.c \
        $(TOP_DIR)/targets/STM32L431_BearPi_bootloader_fota/Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_tim.c \
        $(TOP_DIR)/targets/STM32L431_BearPi_bootloader_fota/Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_spi.c \
        $(TOP_DIR)/targets/STM32L431_BearPi_bootloader_fota/Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_spi_ex.c \
        $(TOP_DIR)/targets/STM32L431_BearPi_bootloader_fota/Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c \
        $(TOP_DIR)/targets/STM32L431_BearPi_bootloader_fota/Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c \
        $(TOP_DIR)/targets/STM32L431_BearPi_bootloader_fota/Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_i2c.c \
        $(TOP_DIR)/targets/STM32L431_BearPi_bootloader_fota/Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_i2c_ex.c \
        $(TOP_DIR)/targets/STM32L431_BearPi_bootloader_fota/Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_qspi.c \
        $(TOP_DIR)/targets/STM32L431_BearPi_bootloader_fota/Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c
        C_SOURCES += $(HAL_DRIVER_SRC)

OTA_SRC = \
		${wildcard  $(TOP_DIR)/components/ota/flag_operate/*.c}  \
		#${wildcard  $(TOP_DIR)/components/ota/package/*.c} \
		${wildcard  $(TOP_DIR)/components/ota/utility/*.c}
        C_SOURCES += $(OTA_SRC)

HARDWARE_SRC =  \
        $(TOP_DIR)/targets/STM32L431_BearPi_bootloader_fota/Hardware/Src/hal_qspi_flash.c \
        $(TOP_DIR)/targets/STM32L431_BearPi_bootloader_fota/Hardware/Src/hal_flash.c
        C_SOURCES += $(HARDWARE_SRC)
		




# ASM sources

ASM_SOURCES_S =  \
        ${wildcard $(TOP_DIR)/arch/arm/arm-m/cortex-m4/gcc/los_dispatch_gcc.S}


######################################
# firmware library
######################################
PERIFLIB_SOURCES =


#######################################
# CFLAGS
#######################################
# cpu
CPU = -mcpu=cortex-m4

# fpu
FPU = -mfpu=fpv4-sp-d16

# float-abi
FLOAT-ABI = -mfloat-abi=hard

# mcu
MCU = $(CPU) -mthumb $(FPU) $(FLOAT-ABI)

# macros for gcc
# AS defines
AS_DEFS = 

# C defines
C_DEFS =  \
        -D USE_HAL_DRIVER \
        -D STM32L431xx \
        -D CONFIG_FEATURE_FOTA \
        -D USE_BOOTLOADER 

# AS includes
AS_INCLUDES = 

# C includes

HAL_DRIVER_INC = \
        -I $(TOP_DIR)/targets/STM32L431_BearPi_bootloader_fota/Drivers/STM32L4xx_HAL_Driver/Inc \
        -I $(TOP_DIR)/targets/STM32L431_BearPi_bootloader_fota/Drivers/STM32L4xx_HAL_Driver/Inc/Legacy \
        -I $(TOP_DIR)/targets/STM32L431_BearPi_bootloader_fota/Drivers/CMSIS/Device/ST/STM32L4xx/Include \
        -I $(TOP_DIR)/targets/STM32L431_BearPi_bootloader_fota/Drivers/CMSIS/Include
        C_INCLUDES += $(HAL_DRIVER_INC)
 
INCLUDE_INC = \
        -I $(TOP_DIR)/include
        C_INCLUDES += $(INCLUDE_INC)	

HARDWARE_INC = \
        -I $(TOP_DIR)/targets/STM32L431_BearPi_bootloader_fota/Hardware/Inc 
        C_INCLUDES += $(HARDWARE_INC)


OTA_INC = \
        -I $(TOP_DIR)/components/ota/flag_operate \
        -I $(TOP_DIR)/components/ota/utility
        C_INCLUDES += $(OTA_INC)
        
USER_INC = \
        -I $(TOP_DIR)/targets/STM32L431_BearPi_bootloader_fota/Inc
        C_INCLUDES += $(USER_INC)

# compile gcc flags
ASFLAGS = $(MCU) $(AS_DEFS) $(AS_INCLUDES) $(OPT) -Wall -fdata-sections -ffunction-sections

CFLAGS = $(MCU) $(C_DEFS) $(C_INCLUDES) $(OPT) -Wall -fdata-sections -ffunction-sections

ifeq ($(DEBUG), 1)
CFLAGS += -g -gdwarf-2
endif


# Generate dependency information
CFLAGS += -MMD -MP -MF"$(@:%.o=%.d)"


#######################################
# LDFLAGS
#######################################
# link script
LDSCRIPT = STM32L431RCTx_FLASH_OTA.ld

# libraries
LIBS = -lc -lm -lnosys
ifeq ($(USE_OTA), yes)
LIBS += -lhwpatch
endif
LIBDIR = -L$(PROJECTBASE)/../Lib
LDFLAGS = $(MCU) -specs=nano.specs -T$(LDSCRIPT) $(LIBDIR) $(LIBS) -Wl,-Map=$(BUILD_DIR)/$(TARGET).map,--cref -Wl,--gc-sections

# default action: build all
all: $(BUILD_DIR)/$(TARGET).elf $(BUILD_DIR)/$(TARGET).hex $(BUILD_DIR)/$(TARGET).bin

#######################################
# build the application
#######################################
# list of objects
OBJECTS = $(addprefix $(BUILD_DIR)/,$(notdir $(C_SOURCES:.c=.o)))
vpath %.c $(sort $(dir $(C_SOURCES)))
# list of ASM program objects
OBJECTS += $(addprefix $(BUILD_DIR)/,$(notdir $(ASM_SOURCES_s:.s=.o)))
vpath %.s $(sort $(dir $(ASM_SOURCES_s)))

$(BUILD_DIR)/%.o: %.c Makefile  | $(BUILD_DIR)
	$(CC) -c $(CFLAGS) -Wa,-a,-ad,-alms=$(BUILD_DIR)/$(notdir $(<:.c=.lst)) $< -o $@

$(BUILD_DIR)/%.o: %.s Makefile  | $(BUILD_DIR)
	$(AS) -c $(CFLAGS) $< -o $@

ifeq ($(USE_BOOTLOADER), no)
$(BUILD_DIR)/%.o: %.S Makefile  | $(BUILD_DIR)
	$(AS) -c $(CFLAGS) $< -o $@
endif

$(BUILD_DIR)/$(TARGET).elf: $(OBJECTS) Makefile 
	$(CC) $(OBJECTS) $(LDFLAGS) -o $@
	$(SZ) $@

$(BUILD_DIR)/%.hex: $(BUILD_DIR)/%.elf | $(BUILD_DIR)
	$(HEX) $< $@

$(BUILD_DIR)/%.bin: $(BUILD_DIR)/%.elf | $(BUILD_DIR)
	$(BIN) $< $@

$(BUILD_DIR):
	mkdir $@		

#######################################
# clean up
#######################################
clean:
	-rm -fR $(BUILD_DIR)
  
#######################################
# dependencies
#######################################
-include $(wildcard $(BUILD_DIR)/*.d)

# *** EOF ***